{"ID":"20250510110943-hf5ngkh","Spec":"1","Type":"NodeDocument","Properties":{"id":"20250510110943-hf5ngkh","title":"未命名_conflict_github_1746846578568","type":"doc","updated":"20250510110943"},"Children":[{"ID":"20250510110918-jlmbloj","Type":"NodeThematicBreak","Properties":{"id":"20250510110918-jlmbloj","updated":"20250510110918"}},{"ID":"20250510110918-tfxumdb","Type":"NodeParagraph","Properties":{"id":"20250510110918-tfxumdb","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"title: 未命名\ndate: 2025-03-30T10:18:08Z\nlastmod: 2025-03-30T10:18:44Z"}]},{"ID":"20250510110918-2xjmz85","Type":"NodeThematicBreak","Properties":{"id":"20250510110918-2xjmz85","updated":"20250510110918"}},{"ID":"20250510110918-jx472v4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250510110918-jx472v4","updated":"20250510110918"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"dHM="},{"Type":"NodeCodeBlockCode"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250510110918-sokdnva","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250510110918-sokdnva","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"一、创建数组"}]},{"ID":"20250510110918-vd8r751","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-vd8r751","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"1、使用数组字面量方法"}]},{"ID":"20250510110918-jh8dum8","Type":"NodeParagraph","Properties":{"id":"20250510110918-jh8dum8","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"var arr1 = [];     // 创建一个数组"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"var arr2 = [10];   // 创建一个数组长度为10的数组"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"var arr3 = ['a','b','c'];  // 创建一个包含3个字符串的数组"}]},{"ID":"20250510110918-xq7k4vc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-xq7k4vc","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"2、使用Array构造函数"}]},{"ID":"20250510110918-7l4d8g1","Type":"NodeParagraph","Properties":{"id":"20250510110918-7l4d8g1","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"无参构造"}]},{"ID":"20250510110918-k8tv2tu","Type":"NodeParagraph","Properties":{"id":"20250510110918-k8tv2tu","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = new Array();   // 创建一个空数组 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-cyo1ba1","Type":"NodeParagraph","Properties":{"id":"20250510110918-cyo1ba1","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"带参构造"}]},{"ID":"20250510110918-t8a6e8e","Type":"NodeParagraph","Properties":{"id":"20250510110918-t8a6e8e","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"如果只传一个数值参数，则表示创建一个初始长度为指定数组的空数组"}]},{"ID":"20250510110918-vbmt5l8","Type":"NodeParagraph","Properties":{"id":"20250510110918-vbmt5l8","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr2 = new Array(10);     // 创建一个数组长度为10的数组 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-2yoib32","Type":"NodeParagraph","Properties":{"id":"20250510110918-2yoib32","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"如果传入一个非数值的参数或者参数大于1，则表示创建一个包含指定元素的数组"}]},{"ID":"20250510110918-1z2z2md","Type":"NodeParagraph","Properties":{"id":"20250510110918-1z2z2md","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr3 = new Array('a','b','c');     // 创建一个包含3个字符串的数组 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-bbd2cjp","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-bbd2cjp","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"3、Array.of方法创建数组(es6新增)"}]},{"ID":"20250510110918-rrf3yex","Type":"NodeParagraph","Properties":{"id":"20250510110918-rrf3yex","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"Array.of()方法会创建一个包含所有传入参数的数组，而不管参数的数量与类型"}]},{"ID":"20250510110918-r3s4fp3","Type":"NodeParagraph","Properties":{"id":"20250510110918-r3s4fp3","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```js"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"let arr1 = Array.of(1,2);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(arr1.length);   // 2"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"let arr2 = Array.of(3);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(arr2.length);   // 1"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(arr2[0]);   // 3"}]},{"ID":"20250510110918-iab5c32","Type":"NodeParagraph","Properties":{"id":"20250510110918-iab5c32","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```"}]},{"ID":"20250510110918-cy35jf1","Type":"NodeParagraph","Properties":{"id":"20250510110918-cy35jf1","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"4、Array.from方法创建数组(es6新增)"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"在js中将非数组对象转换为真正的数组是非常麻烦的。在es6中，将可迭代对象或者类数组对象作为第一个参数传入，Array.from()就能返回一个数组"}]},{"ID":"20250510110918-z947jb8","Type":"NodeParagraph","Properties":{"id":"20250510110918-z947jb8","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js function arga(...args){  // ...args剩余参数数组，由传递给函数的实际参数提供      let arg = Array.from(args);      console.log(arg); }arga(arr1,26,from);     // [arr1,26,from] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-x0pnxlv","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20250510110918-x0pnxlv","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"二、数组方法"}]},{"ID":"20250510110918-aq5zdnm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-aq5zdnm","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"1.改变数组本身的方法"}]},{"ID":"20250510110918-uw3101x","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-uw3101x","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"push，向数组的尾新增一个元素，可以添加一个或多个元素，返回值是改变后的该数组的length值"}]},{"ID":"20250510110918-2v59lt1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-2v59lt1","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"pop，从数组的最后删除一个元素，返回值是被删除的元素"}]},{"ID":"20250510110918-cb7bqnw","Type":"NodeParagraph","Properties":{"id":"20250510110918-cb7bqnw","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = ['lily','lucy','Tom']; var count = arr1.push('Jack','Sean'); console.log(count);   // 5 console.log(arr1);   // ['lily','lucy','Tom','Jack','Sean'] var item = arr1.pop(); console.log(item);   // Sean console.log(arr1);   // ['lily','lucy','Tom','Jack'] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-rdhpr2q","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-rdhpr2q","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"unshift，向数组的头新增一个或更多元素，返回值是改变后的该数组的length值"}]},{"ID":"20250510110918-ymk9aso","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-ymk9aso","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"shift，从数组的头部删除第一个元素，返回值是被删除的元素"}]},{"ID":"20250510110918-wwdfq9f","Type":"NodeParagraph","Properties":{"id":"20250510110918-wwdfq9f","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = ['lily','lucy','Tom']; var count = arr1.unshift('Jack','Sean'); console.log(count);   // 5 console.log(arr1);   // ['Jack','Sean','lily','lucy','Tom'] var item = arr1.shift(); console.log(item);   // Jack console.log(arr1);   // [''Sean','lily','lucy','Tom'] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-yk3bhip","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-yk3bhip","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"splice(index, num, item1, item2, …)，"}]},{"ID":"20250510110918-20uc9zo","Type":"NodeParagraph","Properties":{"id":"20250510110918-20uc9zo","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"index是指定开始处理的索引位置，"}]},{"ID":"20250510110918-mr3qd08","Type":"NodeParagraph","Properties":{"id":"20250510110918-mr3qd08","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"num指定删除多少项，"}]},{"ID":"20250510110918-dxa9sij","Type":"NodeParagraph","Properties":{"id":"20250510110918-dxa9sij","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"从第三个元素开始都是新增的元素项。可以实现从指定的索引位置新增、删除、替换元素。返回值是被删除的元素组成的数组。"}]},{"ID":"20250510110918-phecozx","Type":"NodeParagraph","Properties":{"id":"20250510110918-phecozx","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```js"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"//替换"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"var a=['a','b','c'];"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"var b=a.splice(1,1,'e','f');    //a=['a','e','f','c'],b=['b']"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"//删除"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"var arr1 = [1,3,5,7,9,11];"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"var arrRemoved = arr1.splice(0,2);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(arr1);   // [5,7,9,11]"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(arrRemoved);   // [1,3]// 添加元素"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"var arr1 = [22,3,31,12];"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"arr1.splice(1,0,12,35);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(arr1);   // [22,12,35,3,31,12]"}]},{"ID":"20250510110918-6u09wi4","Type":"NodeParagraph","Properties":{"id":"20250510110918-6u09wi4","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```"}]},{"ID":"20250510110918-ikz8wqh","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-ikz8wqh","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"sort，对数组排序，默认按照升序排列，可以传递函数类型的参数决定排序的方式用于对数组的元素进行排序。排序顺序可以是字母或数字，并按升序或降序，默认排序顺序为按字母升序"}]},{"ID":"20250510110918-se0tda1","Type":"NodeParagraph","Properties":{"id":"20250510110918-se0tda1","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = ['a','d','c','b']; console.log(arr1.sort());   // ['a','b','c','d'] function compare(value1,value2){      if(value1 \u0026lt; value2){           return -1;      }else if(value1 \u0026gt; value2){           return 1;      }else{           return 0;      } }var arr2 = [13,24,51,3]; console.log(arr2.sort(compare));   // [3,13,24,51] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-nt3blnm","Type":"NodeParagraph","Properties":{"id":"20250510110918-nt3blnm","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"// 如果需要通过比较函数产生降序排序的结果，只要交后比较函数返回的值即可"}]},{"ID":"20250510110918-gecil0j","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-gecil0j","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"reverse，反转数组"}]},{"ID":"20250510110918-59zgjy6","Type":"NodeParagraph","Properties":{"id":"20250510110918-59zgjy6","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = [13,24,51,3]; console.log(arr1.reverse());   // [3,51,24,13] console.log(arr1);   // 3,51,24,13 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-pt1b3ll","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-pt1b3ll","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。"}]},{"ID":"20250510110918-i7s7zim","Type":"NodeParagraph","Properties":{"id":"20250510110918-i7s7zim","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = [1,2,3,4,5]; var sum = arr1.reduce((prev,cur,index,array) =\u0026gt; {      return prev + cur; },10);   // 数组一开始加了一个初始值10，可以不设默认0 console.log(sum);   // 25 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-ym1f1h0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-ym1f1h0","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"2. 不改变数组本身返回新数组的方法"}]},{"ID":"20250510110918-b8oc52c","Type":"NodeParagraph","Properties":{"id":"20250510110918-b8oc52c","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"concat，concat的参数，可以是单个/多个基本类型的值，也可以是数组。对原数组和参数拼接，返回拼接后形成的新数组。"}]},{"ID":"20250510110918-tlac8tb","Type":"NodeParagraph","Properties":{"id":"20250510110918-tlac8tb","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = [1,3,5,7]; var arrCopy = arr1.concat(9,[11,13]); console.log(arrCopy);   // [1,3,5,7,9,11,13] console.log(arr1);   // 1,3,5,7 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-0obtgds","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-0obtgds","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"slice(startIndex, endIndex)，截取原数组的片段，前闭后开区间，包含startIndex索引的元素开始截取，一直到endIndex索引之前的那个元素"}]},{"ID":"20250510110918-gccl7u1","Type":"NodeParagraph","Properties":{"id":"20250510110918-gccl7u1","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"总结：炒菜，切巨型火腿肠，闭区间切，如果火腿尾部坏了，切了不要。"}]},{"ID":"20250510110918-3dhcm7e","Type":"NodeParagraph","Properties":{"id":"20250510110918-3dhcm7e","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"截取区间：[startIndex,endIndex)"}]},{"ID":"20250510110918-2c7vvh7","Type":"NodeParagraph","Properties":{"id":"20250510110918-2c7vvh7","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = [1,3,5,7,9,11]; var arrCopy = arr1.slice(1); var arrCopy2 = arr1.slice(1,4); var arrCopy3 = arr1.slice(1,-2);   // 相当于arr1.slice(1,4); var arrCopy4 = arr1.slice(-4,-1);   // 相当于arr1.slice(2,5); console.log(arr1);   // 1,3,5,7,9,11 console.log(arrCopy);   // [3,5,7,9,11] console.log(arrCopy2);   // [3,5,7] console.log(arrCopy3);   // [3,5,7] console.log(arrCopy4);   // [5,7,9]//如果不传入参数二，那么将从参数一的索引位置开始截取，一直到数组尾 var a=[1,2,3,4,5,6]; var b=a.slice(0,3);    //[1,2,3] var c=a.slice(3);       //[4,5,6] //如果两个参数中的任何一个是负数，array.length会和它们相加，试图让它们成为非负数，举例说明： //当只传入一个参数，且是负数时，length会与参数相加，然后再截取 var a=[1,2,3,4,5,6]; var b=a.slice(-1);    //[6] //当只传入一个参数，是负数时,并且参数的绝对值大于数组length时，会截取整个数组 var a=[1,2,3,4,5,6]; var b=a.slice(-6);    //[1,2,3,4,5,6] var c=a.slice(-8);    //[1,2,3,4,5,6] //当传入两个参数一正一负时，length也会先于负数相加后，再截取 var a=[1,2,3,4,5,6]; var b=a.slice(2,-3);    //[3] //当传入一个参数，大于length时，将返回一个空数组 var a=[1,2,3,4,5,6]; var b=a.slice(6);　　//[] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-pm8zesx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-pm8zesx","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"3.循环遍历相关的方法"}]},{"ID":"20250510110918-s4jbw6l","Type":"NodeParagraph","Properties":{"id":"20250510110918-s4jbw6l","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"这些方法也可以在循环的过程中 间接的改变数组自身的元素"}]},{"ID":"20250510110918-djixiy3","Type":"NodeParagraph","Properties":{"id":"20250510110918-djixiy3","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"forEach((item, index) =\u003e {})方法，遍历数组的每个元素，参数为一个函数，参数函数的两个参数为数组项和对应的索引"}]},{"ID":"20250510110918-i9gao7j","Type":"NodeParagraph","Properties":{"id":"20250510110918-i9gao7j","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"forEach方法中的function回调有三个参数："}]},{"ID":"20250510110918-a88718y","Type":"NodeParagraph","Properties":{"id":"20250510110918-a88718y","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"第一个参数是遍历的数组内容，"}]},{"ID":"20250510110918-p726zrt","Type":"NodeParagraph","Properties":{"id":"20250510110918-p726zrt","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"第二个参数是对应的数组索引，"}]},{"ID":"20250510110918-n1xsvfs","Type":"NodeParagraph","Properties":{"id":"20250510110918-n1xsvfs","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"第三个参数是数组本身"}]},{"ID":"20250510110918-vt91o7q","Type":"NodeParagraph","Properties":{"id":"20250510110918-vt91o7q","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr = [1,2,3,4]; var sum =0; arr.forEach(function(value,index,array){ array[index] == value; //结果为true  sum+=value;  });console.log(sum); //结果为 10 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-1frte9y","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-1frte9y","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"includes()方法，es7新增，用来判断一个数组、字符串是否包含一个指定的值，使用===运算符来进行值比较，如果是返回true，否则false，参数有两个，第一个是(必填)需要查找的元素值，第二个是(可选)开始查找元素的位置."}]},{"ID":"20250510110918-uvyuhdm","Type":"NodeParagraph","Properties":{"id":"20250510110918-uvyuhdm","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = [22,3,31,12,58]; var includes = arr1.includes(31); console.log(includes);   // true var includes2 = arr1.includes(31,3);   // 从索引3开始查找31是否存在 console.log(includes2);   // false ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-pp62doj","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-pp62doj","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"map((item, index) =\u003e {})"}]},{"ID":"20250510110918-y3djeyd","Type":"NodeParagraph","Properties":{"id":"20250510110918-y3djeyd","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"方法，遍历数组的每个元素，参数为一个函数，参数函数的两个参数为数组项和对应的索引，根据参数函数的执行结果，把这些结果组成一个新数组返回。"}]},{"ID":"20250510110918-g3vzbc7","Type":"NodeParagraph","Properties":{"id":"20250510110918-g3vzbc7","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"会按照原始数组元素顺序依次处理元素。"}]},{"ID":"20250510110918-6481zpo","Type":"NodeParagraph","Properties":{"id":"20250510110918-6481zpo","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js let array = [1, 2, 3, 4, 5]; let newArray = array.map((item) =\u0026gt; {     return item * item; }) console.log(newArray)  // [1, 4, 9, 16, 25] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-saxl21y","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-saxl21y","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"filter((item, index) =\u003e {})方法，遍历数组的每个元素，执行参数函数，将符合参数函数中定义条件的那些项留下，组成一个新数组返回"}]},{"ID":"20250510110918-ut6jdmi","Type":"NodeParagraph","Properties":{"id":"20250510110918-ut6jdmi","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js const array = [14, 17, 18, 32, 33, 16, 40]; const newArr = array.filter(num =\u0026gt; num \u0026gt; 14) console.log(newArr);//打印 [17,18,32,33,16,40] // 查找某个值------------------------- const array = [14, 17, 18, 32, 33, 16, 40]; const newArr = array.filter(num =\u0026gt; num == 14) console.log(newArr);//打印 [14] //返回大于某个值和小于某个值的元素 const array = [14, 17, 18, 32, 33, 16, 40]; const newArr = array.filter(num =\u0026gt; num \u0026gt; 14 \u0026amp;\u0026amp; num \u0026lt; 33) console.log(newArr);//打印 [17, 18, 32, 16] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-rlubof3","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-rlubof3","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"find()和findIndex()"}]},{"ID":"20250510110918-p3ow3qq","Type":"NodeParagraph","Properties":{"id":"20250510110918-p3ow3qq","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"都接受两个参数：一个回调函数，一个可选值用于指定回调函数内部的this"}]},{"ID":"20250510110918-13usl4f","Type":"NodeParagraph","Properties":{"id":"20250510110918-13usl4f","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"该回调函数可接受3个参数：数组的某个元素、该元素对应的索引位置、数组本身，在回调函数第一次返回true时停止查找。"}]},{"ID":"20250510110918-v37knvi","Type":"NodeParagraph","Properties":{"id":"20250510110918-v37knvi","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"二者的区别是：find()方法返回匹配的值，而findIndex()方法返回匹配位置的索引"}]},{"ID":"20250510110918-vb44ox8","Type":"NodeParagraph","Properties":{"id":"20250510110918-vb44ox8","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```js"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"let arr = [1,2,3,4,5];"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"let num = arr.find(item =\u003e item \u003e 1);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(num) // 2"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"let arr = [1,2,3,4,5];"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"let num = arr.findIndex(item =\u003e item \u003e 1);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"console.log(num) // 1"}]},{"ID":"20250510110918-z9xcgr2","Type":"NodeParagraph","Properties":{"id":"20250510110918-z9xcgr2","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```"}]},{"ID":"20250510110918-txmzq9o","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-txmzq9o","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"entries()、keys()和values()"}]},{"ID":"20250510110918-3lcyvw5","Type":"NodeParagraph","Properties":{"id":"20250510110918-3lcyvw5","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"es6新增 entries()、keys()和values()--用于遍历数组。它们都返回一个遍历器对象，可以用for...of循环进行遍历 区别是keys()是对键名的遍历、values()是对键值的遍历、entries()是对"}]},{"ID":"20250510110918-b3evtt4","Type":"NodeParagraph","Properties":{"id":"20250510110918-b3evtt4","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"键值对的遍历"}]},{"ID":"20250510110918-xto65ik","Type":"NodeParagraph","Properties":{"id":"20250510110918-xto65ik","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js for(let index of [a,b].keys()){      console.log(index); } // 0 // 1 for(let elem of [a,b].values()){      console.log(elem); } // a // b for(let [index,elem] of [a,b].entries()){      console.log(index,elem); } // 0 'a' // 1 'b' ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-3ocefog","Type":"NodeParagraph","Properties":{"id":"20250510110918-3ocefog","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"如果不使用for…of循环，可以手动调用遍历器对象的next方法，进行遍历"}]},{"ID":"20250510110918-g1m8bml","Type":"NodeParagraph","Properties":{"id":"20250510110918-g1m8bml","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js let arr1 = [a,b,c]; let entries = arrr1.entries(); console.log(entries.next().value);   // [0,a] console.log(entries.next().value);   // [1,b] console.log(entries.next().value);   // [2,c] ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-itpxmcz","Type":"NodeParagraph","Properties":{"id":"20250510110918-itpxmcz","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"indexOf()"}]},{"ID":"20250510110918-s8jbxne","Type":"NodeParagraph","Properties":{"id":"20250510110918-s8jbxne","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"indexof方法可以在字符串和数组上使用。"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"indexOf() 方法可返回某个指定的字符串值在字符串、数组中首次出现的位置。"}]},{"ID":"20250510110918-r1ig3le","Type":"NodeParagraph","Properties":{"id":"20250510110918-r1ig3le","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js    arr = ['mfg', '2017', '2016'];   console.log(arr.indexOf('mfg')); // 0     console.log(arr.indexOf('m')); // -1     console.log(arr.indexOf('2017'));// 1     console.log(arr.indexOf(2017)); // -1，这里不会做隐式类型转换 ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-bxtuo5p","Type":"NodeParagraph","Properties":{"id":"20250510110918-bxtuo5p","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"some((item, index) =\u003e {})方法，循环数组，对每一项执行参数函数中的条件，有符合条件的项则立即返回true，不再继续遍历；如果全部遍历完还没有找到符合项则返回false"}]},{"ID":"20250510110918-3kkv81t","Type":"NodeParagraph","Properties":{"id":"20250510110918-3kkv81t","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"判断数组中是否存在满足条件的项，只要有一项满足条件，就会返回true。"}]},{"ID":"20250510110918-ybtb7ol","Type":"NodeParagraph","Properties":{"id":"20250510110918-ybtb7ol","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = [1,2,3,4,5]; var arr2 = arr1.some(x =\u0026gt; {      return x \u0026lt; 3; }); console.log(arr2);   // true var arr3 = arr1.some(x =\u0026gt; {      return x \u0026lt; 1; }); console.log(arr3);   // false ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-hxzmgeq","Type":"NodeParagraph","Properties":{"id":"20250510110918-hxzmgeq","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"every((item, index) =\u003e {})，与some相反，every需要是数组中每一项都符合参数函数中的条件才返回true，如果遇见任何一项不符合立即返回false，也不再继续遍历后续项。"}]},{"ID":"20250510110918-mw8gf0l","Type":"NodeParagraph","Properties":{"id":"20250510110918-mw8gf0l","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"判断数组中每一项都是否满足条件，只有所有项都满足条件，才会返回true。"}]},{"ID":"20250510110918-hg18glv","Type":"NodeParagraph","Properties":{"id":"20250510110918-hg18glv","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"js var arr1 = [1,2,3,4,5]; var arr2 = arr1.every(x =\u0026gt; {      return x \u0026lt; 10; }); console.log(arr2);   // true var arr3 = arr1.every(x =\u0026gt; {      return x \u0026lt; 3; }); console.log(arr3);   // false ‍"},{"Type":"NodeText","Data":"​"}]},{"ID":"20250510110918-z82cpx5","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20250510110918-z82cpx5","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-in 和 for-of的区别"}]},{"ID":"20250510110918-udi9k1s","Type":"NodeParagraph","Properties":{"id":"20250510110918-udi9k1s","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"，for-in 和 for-of 是for循环的两个最常用的变体；for-in 循环是一种迭代对象属性的方法。它可以用于"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://so.csdn.net/so/search?q=%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1\u0026amp;spm=1001.2101.3001.7020","TextMarkTextContent":"遍历对象"},{"Type":"NodeText","Data":"中的所有可枚举属性，包括从原型链继承的属性。通常，我们使用 for-in 循环来遍历对象的"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"键名"},{"Type":"NodeText","Data":"。"}]},{"ID":"20250510110918-dm0jf0k","Type":"NodeParagraph","Properties":{"id":"20250510110918-dm0jf0k","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```js"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"const person = {"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  name: 'John',"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  age: 30,"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  gender: 'male'"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"};"}]},{"ID":"20250510110918-hgpp8g9","Type":"NodeParagraph","Properties":{"id":"20250510110918-hgpp8g9","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for (const key in person) {"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  console.log(key, person[key]);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"}"}]},{"ID":"20250510110918-ngazsxy","Type":"NodeParagraph","Properties":{"id":"20250510110918-ngazsxy","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"//name John"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"//age 30"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"//gender male"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"‍```"}]},{"ID":"20250510110918-8s9v4t2","Type":"NodeParagraph","Properties":{"id":"20250510110918-8s9v4t2","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-in 循环并不是按照对象属性在对象中的顺序迭代的。这是因为 JavaScript 中的对象属性没有固定的顺序。因此，我们在使用 for-in 循环迭代对象时，不能保证它们的顺序。"}]},{"ID":"20250510110918-o6lish5","Type":"NodeParagraph","Properties":{"id":"20250510110918-o6lish5","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"另外，由于 for-in 循环会遍历对象的原型链，因此可能会迭代到不是自身属性的属性。为了避免这种情况，我们可以使用 hasOwnProperty 方法来检查属性是否为对象自身的属性。"}]},{"ID":"20250510110918-3b3idv9","Type":"NodeParagraph","Properties":{"id":"20250510110918-3b3idv9","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"下面是一个使用 hasOwnProperty 的例子："}]},{"ID":"20250510110918-0c8uxdj","Type":"NodeParagraph","Properties":{"id":"20250510110918-0c8uxdj","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```js"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"const person = {"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  name: 'John',"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  age: 30,"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  gender: 'male'"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"};"}]},{"ID":"20250510110918-qd7nwy5","Type":"NodeParagraph","Properties":{"id":"20250510110918-qd7nwy5","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for (const key in person) {"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  if (person.hasOwnProperty(key)) {"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"    console.log(key, person[key]);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  }"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"}"}]},{"ID":"20250510110918-khzsycn","Type":"NodeParagraph","Properties":{"id":"20250510110918-khzsycn","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```"}]},{"ID":"20250510110918-8mfvoxl","Type":"NodeParagraph","Properties":{"id":"20250510110918-8mfvoxl","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-of 循环是一种迭代可迭代对象的方法。它可以用于遍历数组、字符串、Map、Set、TypedArray 等可迭代对象。通常，我们使用 for-of 循环来遍历数组或"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"字符串的值"},{"Type":"NodeText","Data":"。"}]},{"ID":"20250510110918-6ma0yqk","Type":"NodeParagraph","Properties":{"id":"20250510110918-6ma0yqk","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"‍```js"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"const arr = [1, 2, 3];"}]},{"ID":"20250510110918-a29vc62","Type":"NodeParagraph","Properties":{"id":"20250510110918-a29vc62","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for (const value of arr) {"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"  console.log(value);"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"}"}]},{"ID":"20250510110918-vrw93kc","Type":"NodeParagraph","Properties":{"id":"20250510110918-vrw93kc","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"//1"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"//2"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"//3"},{"Type":"NodeBr","Data":"br"},{"Type":"NodeText","Data":"‍```"}]},{"ID":"20250510110918-yaguj75","Type":"NodeParagraph","Properties":{"id":"20250510110918-yaguj75","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-of 循环不适用于迭代对象属性。如果我们尝试使用 for-of 循环迭代对象，将会抛出 TypeError 异常。"}]},{"ID":"20250510110918-w2gbiyw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250510110918-w2gbiyw","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"区别"}]},{"ID":"20250510110918-03bnh3b","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250510110918-03bnh3b","updated":"20250510110918"},"Children":[{"ID":"20250510110918-ungcftb","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250510110918-ungcftb","updated":"20250510110918"},"Children":[{"ID":"20250510110918-pgf7hoj","Type":"NodeParagraph","Properties":{"id":"20250510110918-pgf7hoj","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"迭代对象的内容不同"}]}]}]},{"ID":"20250510110918-rf75v9f","Type":"NodeParagraph","Properties":{"id":"20250510110918-rf75v9f","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-in 循环迭代对象的是键名，而 for-of 循环迭代对象的是值。因此，for-in 循环适用于迭代对象的键名，而 for-of 循环适用于迭代对象的值。"}]},{"ID":"20250510110918-vf3xtuf","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250510110918-vf3xtuf","updated":"20250510110918"},"Children":[{"ID":"20250510110918-gix6jk1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250510110918-gix6jk1","updated":"20250510110918"},"Children":[{"ID":"20250510110918-qhwm2zo","Type":"NodeParagraph","Properties":{"id":"20250510110918-qhwm2zo","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"迭代对象的类型不同"}]}]}]},{"ID":"20250510110918-rp7faeo","Type":"NodeParagraph","Properties":{"id":"20250510110918-rp7faeo","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-in 循环适用于遍历对象，包括普通对象、数组、函数等，而 for-of 循环适用于遍历可迭代对象，包括数组、字符串、Map、Set、TypedArray 等。"}]},{"ID":"20250510110918-afgq8b4","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250510110918-afgq8b4","updated":"20250510110918"},"Children":[{"ID":"20250510110918-v8w27ws","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20250510110918-v8w27ws","updated":"20250510110918"},"Children":[{"ID":"20250510110918-n5sreh9","Type":"NodeParagraph","Properties":{"id":"20250510110918-n5sreh9","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"迭代对象的顺序不同"}]}]}]},{"ID":"20250510110918-zk4h3e6","Type":"NodeParagraph","Properties":{"id":"20250510110918-zk4h3e6","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-in 循环的迭代顺序是不确定的，因为对象的属性没有固定的顺序。而 for-of 循环的迭代顺序是确定的，因为可迭代对象的值是按照一定顺序排列的。"}]},{"ID":"20250510110918-pkaogq7","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250510110918-pkaogq7","updated":"20250510110918"},"Children":[{"ID":"20250510110918-hmaeyhi","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"NC4=","Num":4},"Properties":{"id":"20250510110918-hmaeyhi","updated":"20250510110918"},"Children":[{"ID":"20250510110918-lome17c","Type":"NodeParagraph","Properties":{"id":"20250510110918-lome17c","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"迭代对象的原理不同"}]}]}]},{"ID":"20250510110918-e4dwar3","Type":"NodeParagraph","Properties":{"id":"20250510110918-e4dwar3","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"for-in 循环遍历对象时，会遍历对象的原型链，并且会包含从原型链继承的属性。而 for-of 循环遍历的对象是可迭代对象，它们的值是可枚举的。"}]},{"ID":"20250510110918-07j8gab","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250510110918-07j8gab","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"如何选择合适的循环方法"}]},{"ID":"20250510110918-rbc61l6","Type":"NodeParagraph","Properties":{"id":"20250510110918-rbc61l6","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"在选择使用 for-in 循环还是 for-of 循环时，我们需要考虑对象的类型以及我们需要迭代的内容。通常，如果我们需要迭代对象的键名，我们可以使用 for-in 循环；如果我们需要迭代对象的值，我们可以使用 for-of 循环。"}]},{"ID":"20250510110918-dbz1szw","Type":"NodeParagraph","Properties":{"id":"20250510110918-dbz1szw","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"另外，当我们需要遍历数组或字符串时，我们可以使用 for-of 循环，因为它可以提供更好的性能和可读性。相比之下，for-in 循环会遍历对象的原型链，会导致性能下降。"}]},{"ID":"20250510110918-0xm7h5h","Type":"NodeParagraph","Properties":{"id":"20250510110918-0xm7h5h","updated":"20250510110918"},"Children":[{"Type":"NodeText","Data":"如果我们需要遍历一个对象，同时又需要过滤掉从原型链继承的属性，我们可以使用 hasOwnProperty 方法进行过滤。"}]}]}